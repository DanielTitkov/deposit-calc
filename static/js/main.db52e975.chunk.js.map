{"version":3,"sources":["helper/math.js","helper/url.js","config/config.js","components/calc/tipped_label/TippedLabel.js","components/calc/data_input/DataInput.js","store/actions/calcActions.js","components/calc/data_output_number/DataOutputValue.js","components/calc/data_output_table/DataOutputTable.js","components/calc/data_output_table_block/DataOutputTableBlock.js","helper/format.js","components/calc/data_output_line_chart/DataOutputLineChart.js","components/calc/data_output_chart_block/DataOutputTableBlock.js","components/decision_block/DecisionBlock.js","components/calc/data_output/DataOutput.js","components/user/user_snippet/UserSnippet.js","components/interface/controls/Controls.js","components/interface/footer/Footer.js","components/interface/intro/Intro.js","components/interface/title_block/TitleBlock.js","pages/Home.js","App.js","store/actions/userActions.js","store/actions/urlActions.js","serviceWorker.js","store/reducers/calcReducer.js","store/reducers/userReducer.js","store/reducers/urlReducer.js","store/reducers/rootReducer.js","Provider.js","index.js"],"names":["round","value","precision","Number","isInteger","shift","Math","pow","percentToDecimal","n","parseQueryString","string","hash","slice","split","map","queryParam","kvp","key","reduce","query","config","defaults","INFLATION_CONTROL","INFLATION_VALUE","MORTGAGE_RATE","MORTGAGE_PERIOD","DEPOSIT_RATE","ASSET_PRICE","RENT_PRICE","RENT_COEF","INITIAL_PAYMENT","ASSET_PRICE_INCREASE_COEF","labels","WALL_SHARE","interface","INITIAL_PAYMENT_RATES","ALLOW_ADVANCED_FIELDS","limits","MORTGAGE_RATE_MIN","MORTGAGE_RATE_MAX","MORTGAGE_PERIOD_MIN","MORTGAGE_PERIOD_MAX","DEPOSIT_RATE_MIN","DEPOSIT_RATE_MAX","ASSET_PRICE_MIN","ASSET_PRICE_MAX","RENT_PRICE_MIN","RENT_PRICE_MAX","INITIAL_PAYMENT_MIN","INITIAL_PAYMENT_MAX","ASSET_PRICE_INCREASE_COEF_MIN","ASSET_PRICE_INCREASE_COEF_MAX","VK_APP_ID","AUTHOR_LINK","TippedLabel","labelText","tooltipText","max","min","className","Popup","trigger","Icon","name","content","basic","DataInput","dispatch","useDispatch","useState","showAdvancedFields","setShowAdancedFields","urlParams","window","location","ifGiven","given","def","inputData","inflationControl","inflationValue","mortgageRate","mortgagePeriod","assetPrice","rentPrice","depositRate","initialPayment","assetPriceIncreaseCoef","setMortgageRate","setMortgagePeriod","setAssetPrice","setRentPrice","setDepositRate","setInitialPayment","setAssetPriceIncreaseCoef","checkLimit","values","floatValue","useEffect","parseFloat","getState","type","data","updateCalcInput","Grid","stackable","padded","Row","columns","Column","customInput","Form","Input","fluid","label","placeholder","isAllowed","icon","onValueChange","thousandSeparator","newPrice","e","Button","primary","size","onClick","DataOutputValue","decimalScale","suffix","format","displayType","isNumericString","DataOutputTable","color","Table","selectable","unstackable","inverted","Body","Object","keys","Cell","textAlign","DataOutputTableBlock","headerText","tableColor","Header","as","asMoney","toFixed","replace","String","fromCharCode","asPerc","DataOutputLineChart","depositKey","mortgageKey","nameKey","assetPriceKey","depositContibutionSumKey","depositIncomeSumKey","height","width","margin","top","right","bottom","left","dataKey","stroke","strokeWidth","dot","stackId","fill","strokeDasharray","tickFormatter","formats","money","perc","result","asFormat","interval","mirror","padding","formatter","props","DataOutputChartBlock","children","DecisionBlock","DecisionMessage","header","text","Message","DataOutput","useSelector","state","calc","monthlyMortgagePayment","loanPeriod","loanRate","monthlyLoanRate","calculateMonthlyLoanPayment","totalMortgagePayment","mortgageOverpayment","assetOverpaymentPerc","monthlyDepositContribution","depositContributionSum","rentPaymentsSum","depositPeriod","monthlyDepositRate","contribution","cumulativeSums","incomes","i","income","push","calculateDepositSums","depositSums","depositIncomes","depositResult","length","depositIncome","mortgageAssetPayback","pureAssetPayback","assetCoveringPerc","assetCoveringRemainder","depositChartData","filter","_","deposit","depositContibutionSum","depositIncomeSum","a","b","mortgage","mortgageData","depositData","paybackData","assetDepositData","UserSnippet","user","currentUser","profile","Comment","Group","Avatar","src","photo_100","Content","Author","first_name","last_name","Text","Controls","exportUrl","setExportUrl","handleExport","search","appId","querystring","stringify","buildExportUrl","handleWallPost","setOpen","bridge","send","React","open","ExportModal","Modal","closeIcon","Menu","Item","onClose","onOpen","Actions","vertical","compact","Footer","disabled","href","target","rel","Intro","Divider","TitleBlock","showIntro","setShowIntro","Accordion","Title","active","Home","Container","App","sendPromise","then","catch","err","error","rentCoef","Boolean","hostname","match","initState","loading","calcReducer","action","userReducer","vkquery","urlReducer","rootReducer","combineReducers","url","ProviderWrapper","store","createStore","applyMiddleware","thunk","CalcApp","Provider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.db52e975.chunk.js","sourcesContent":["// because js just doesn't have NORMAL round fuction >_____<\n// and we are counting MONEY here\n// https://stackoverflow.com/a/47151941\nexport const round = (value, precision) => {\n    if (Number.isInteger(precision)) {\n        var shift = Math.pow(10, precision);\n        // Limited preventing decimal issue\n        return (Math.round(value * shift + 0.00000000000001) / shift);\n    } else {\n        return Math.round(value);\n    }\n} \n\nexport const calculateMonthlyLoanPayment = (assetPrice, loanPeriod, loanRate, initialPayment) => {\n    const monthlyLoanRate = loanRate / 12;\n    const mortgageSum = assetPrice - initialPayment;\n    return mortgageSum*monthlyLoanRate*((1+monthlyLoanRate)**(loanPeriod*12))/(((1+monthlyLoanRate)**(loanPeriod*12))-1)\n}\n\nexport const calculateDepositSums = (depositPeriod, monthlyDepositRate, contribution, initialPayment) => {\n    let cumulativeSums = [initialPayment];\n    let incomes = [0];\n    for (let i = 0; i < depositPeriod * 12; i++) {\n        let income = cumulativeSums[i]*monthlyDepositRate;\n        incomes.push(income);\n        cumulativeSums.push(cumulativeSums[i] + income + contribution);\n    }\n    return [cumulativeSums, incomes];\n}\n\nexport const percentToDecimal = (n) => (\n    n / 100\n);","export const parseQueryString = (string, hash=false) => {\n    return string.slice(hash ? 6 : 1).split('&')\n        .map((queryParam) => {\n            let kvp = queryParam.split('=');\n            return {key: kvp[0], value: kvp[1]}\n        })\n        .reduce((query, kvp) => {\n            query[kvp.key] = kvp.value;\n            return query\n        }, {})\n};","const config = {\n    defaults: {\n        INFLATION_CONTROL: false,\n        INFLATION_VALUE: 0,\n        MORTGAGE_RATE: 8,\n        MORTGAGE_PERIOD: 15,\n        DEPOSIT_RATE: 4,\n        ASSET_PRICE: 6000000,\n        RENT_PRICE: 30000,\n        RENT_COEF: 0.005, // not used by now\n        INITIAL_PAYMENT: 1000000,\n        ASSET_PRICE_INCREASE_COEF: 0,\n    },\n    labels: {\n        INFLATION_CONTROL: 'Учитывать инфляцию',\n        INFLATION_VALUE: 'Среднегодовая инфляция',\n        MORTGAGE_RATE: 'Процентная ставка по ипотеке',\n        INITIAL_PAYMENT: \"Первоначальный взнос\",\n        MORTGAGE_PERIOD: 'Срок кредитования в годах',\n        DEPOSIT_RATE: 'Процентная ставка по вкладу',\n        ASSET_PRICE: 'Цена актива',\n        RENT_PRICE: 'Месяц аренды',\n        RENT_COEF: 'Коэффициент стоимости аренды', // not used by now\n        WALL_SHARE: \"Что выгоднее - ипотека или вклад? Вот что у меня получилось.\",\n        ASSET_PRICE_INCREASE_COEF: \"Годовое удорожание актива\",\n    },\n    interface: {\n        INITIAL_PAYMENT_RATES: [0, 0.1, 0.15, 0.2, 0.3],\n        ALLOW_ADVANCED_FIELDS: false,\n    },\n    limits: {\n        MORTGAGE_RATE_MIN: 0,\n        MORTGAGE_RATE_MAX: 50,\n        MORTGAGE_PERIOD_MIN: 1,\n        MORTGAGE_PERIOD_MAX: 99,\n        DEPOSIT_RATE_MIN: 0,\n        DEPOSIT_RATE_MAX: 50,\n        ASSET_PRICE_MIN: 0,\n        ASSET_PRICE_MAX: 1000000000,\n        RENT_PRICE_MIN: 0,\n        RENT_PRICE_MAX: 99000000,\n        RENT_COEF: 0.005, // not used by now\n        INITIAL_PAYMENT_MIN: 0,\n        INITIAL_PAYMENT_MAX: 1000000000,\n        ASSET_PRICE_INCREASE_COEF_MIN: 0,     \n        ASSET_PRICE_INCREASE_COEF_MAX: 30,     \n    },\n    VK_APP_ID: \"7558666\",\n    AUTHOR_LINK: \"https://vk.com/delael\",\n};\n\nexport default config;","import React from 'react';\nimport { Popup, Icon } from 'semantic-ui-react';\n\nconst TippedLabel = ({ labelText, tooltipText, limits }) => {\n    const [max, min] = limits;\n    return (\n        <div className=\"tipped-label-wrapper\">\n            {labelText}\n            <Popup\n                trigger={<span>&nbsp;<Icon name='question circle outline' /></span>}\n                content={\n                    <>\n                        {tooltipText ? <p>{tooltipText}</p> : null}\n                        {max || min ? <small>{`От ${min} до ${max}`}</small> : null}\n                    </>\n                }\n                basic\n            />\n        </div>\n    )\n}\n\nexport default TippedLabel;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Grid } from 'semantic-ui-react';\nimport { useDispatch } from 'react-redux';\nimport { updateCalcInput } from '../../../store/actions/calcActions';\nimport { percentToDecimal } from '../../../helper/math';\nimport NumberFormat from 'react-number-format';\nimport { parseQueryString } from '../../../helper/url';\nimport config from '../../../config/config';\nimport './DataInput.css';\nimport TippedLabel from '../tipped_label/TippedLabel';\n\nconst DataInput = () => {\n\n    const dispatch = useDispatch();\n    const [showAdvancedFields, setShowAdancedFields] = useState(false);\n\n\n    const urlParams = parseQueryString(window.location.hash, true);\n    const ifGiven = (given, def) => (given ? given : def);\n    const inputData = {\n        inflationControl: ifGiven(urlParams && urlParams.inflationControl, config.defaults.INFLATION_CONTROL),\n        inflationValue: ifGiven(urlParams && urlParams.inflationValue, config.defaults.INFLATION_VALUE),\n        mortgageRate: ifGiven(urlParams && urlParams.mortgageRate, config.defaults.MORTGAGE_RATE),\n        mortgagePeriod: ifGiven(urlParams && urlParams.mortgagePeriod, config.defaults.MORTGAGE_PERIOD),\n        assetPrice: ifGiven(urlParams && urlParams.assetPrice, config.defaults.ASSET_PRICE),\n        rentPrice: ifGiven(urlParams && urlParams.rentPrice, config.defaults.RENT_PRICE),\n        depositRate: ifGiven(urlParams && urlParams.depositRate, config.defaults.DEPOSIT_RATE),\n        initialPayment: ifGiven(urlParams && urlParams.initialPayment, config.defaults.INITIAL_PAYMENT),\n        assetPriceIncreaseCoef: ifGiven(urlParams && urlParams.assetPriceIncreaseCoef, config.defaults.ASSET_PRICE_INCREASE_COEF),\n    }\n\n    const [inflationControl] = useState(inputData && inputData.inflationControl);\n    const [inflationValue] = useState(inputData && inputData.inflationValue);\n    const [mortgageRate, setMortgageRate] = useState(inputData && inputData.mortgageRate);\n    const [mortgagePeriod, setMortgagePeriod] = useState(inputData && inputData.mortgagePeriod);\n    const [assetPrice, setAssetPrice] = useState(inputData && inputData.assetPrice);\n    const [rentPrice, setRentPrice] = useState(inputData && inputData.rentPrice);\n    const [depositRate, setDepositRate] = useState(inputData && inputData.depositRate);\n    const [initialPayment, setInitialPayment] = useState(inputData && inputData.initialPayment);\n    const [assetPriceIncreaseCoef, setAssetPriceIncreaseCoef] = useState(inputData && inputData.assetPriceIncreaseCoef);\n\n    const handleRentPriceChange = (newPrice) => {\n        setRentPrice(newPrice);\n    }\n\n    const checkLimit = (values, max, min = 0) => (\n        (values.floatValue <= max) && (values.floatValue >= min)\n    )\n\n    useEffect(() => {\n        const inputData = {\n            inflationControl: inflationControl,\n            mortgageRate: percentToDecimal(parseFloat(mortgageRate)),\n            mortgagePeriod: parseFloat(mortgagePeriod),\n            assetPrice: parseFloat(assetPrice),\n            rentPrice: parseFloat(rentPrice),\n            depositRate: percentToDecimal(parseFloat(depositRate)),\n            inflationValue: parseFloat(inflationValue),\n            initialPayment: parseFloat(initialPayment),\n            assetPriceIncreaseCoef: percentToDecimal(parseFloat(assetPriceIncreaseCoef)),\n        }\n        dispatch(updateCalcInput(inputData));\n    }, [\n        dispatch,\n        inputData,\n        inflationControl, mortgageRate, mortgagePeriod,\n        assetPrice, rentPrice, depositRate, inflationValue,\n        initialPayment, assetPriceIncreaseCoef\n    ]);\n\n    return (\n        <>\n            <Grid stackable padded={false}>\n                <Grid.Row columns={3}>\n\n                    <Grid.Column className=\"data-input-field-wrapper\">\n                        <NumberFormat\n                            customInput={Form.Input}\n                            fluid\n                            label={\n                                <TippedLabel \n                                    labelText={config.labels.MORTGAGE_RATE}\n                                    tooltipText={\"Годовой процент по ипотеке\"}\n                                    limits={[config.limits.MORTGAGE_RATE_MAX, config.limits.MORTGAGE_RATE_MIN]}\n                                />\n                            }\n                            placeholder={config.labels.MORTGAGE_RATE}\n                            value={mortgageRate}\n                            isAllowed={values => checkLimit(values, config.limits.MORTGAGE_RATE_MAX)}\n                            icon='percent'\n                            onValueChange={values => setMortgageRate(values.floatValue)}\n                        />\n                    </Grid.Column>\n                    <Grid.Column className=\"data-input-field-wrapper\">\n                        <NumberFormat\n                            customInput={Form.Input}\n                            fluid\n                            label={\n                                <TippedLabel \n                                    labelText={config.labels.DEPOSIT_RATE}\n                                    tooltipText={\"Годовой доход по вкладу и/или другим инвестициям\"}\n                                    limits={[config.limits.DEPOSIT_RATE_MAX, config.limits.DEPOSIT_RATE_MIN]}\n                                />\n                            }\n                            placeholder={config.labels.DEPOSIT_RATE}\n                            value={depositRate}\n                            isAllowed={values => checkLimit(values, config.limits.MORTGAGE_RATE_MAX)}\n                            icon='percent'\n                            onValueChange={values => setDepositRate(values.floatValue)}\n                        />\n                    </Grid.Column>\n                    <Grid.Column className=\"data-input-field-wrapper\">\n                        <NumberFormat\n                            customInput={Form.Input}\n                            fluid\n                            label={\n                                <TippedLabel \n                                    labelText={config.labels.MORTGAGE_PERIOD}\n                                    tooltipText={\"Сколько лет придется платить по ипотеке\"}\n                                    limits={[config.limits.MORTGAGE_PERIOD_MAX, config.limits.MORTGAGE_PERIOD_MIN]}\n                                />\n                            }\n                            placeholder={config.labels.MORTGAGE_PERIOD}\n                            isAllowed={values => checkLimit(\n                                values,\n                                config.limits.MORTGAGE_PERIOD_MAX,\n                                config.limits.MORTGAGE_PERIOD_MIN\n                            )}\n                            value={mortgagePeriod}\n                            onValueChange={values => setMortgagePeriod(values.floatValue)}\n                        />\n                    </Grid.Column>\n                </Grid.Row>\n\n                <Grid.Row columns={3}>\n                    <Grid.Column className=\"data-input-field-wrapper\">\n                        <NumberFormat\n                            customInput={Form.Input}\n                            fluid\n                            label={\n                                <TippedLabel \n                                    labelText={config.labels.ASSET_PRICE}\n                                    tooltipText={\"Полная стоимость квартиры\"}\n                                    limits={[config.limits.ASSET_PRICE_MAX, config.limits.ASSET_PRICE_MIN]}\n                                />\n                            }\n                            placeholder={config.labels.ASSET_PRICE}\n                            isAllowed={values => checkLimit(values, config.limits.ASSET_PRICE_MAX)}\n                            value={assetPrice}\n                            onValueChange={values => setAssetPrice(values.floatValue)}\n                            thousandSeparator=\" \"\n                            icon=\"ruble sign\"\n                        />\n                    </Grid.Column>\n                    <Grid.Column className=\"data-input-field-wrapper\">\n                        <NumberFormat\n                            customInput={Form.Input}\n                            fluid\n                            label={\n                                <TippedLabel \n                                    labelText={config.labels.RENT_PRICE}\n                                    tooltipText={\"Во сколько обойдется аренда, если не брать ипотеку\"}\n                                    limits={[config.limits.RENT_PRICE_MAX, config.limits.RENT_PRICE_MIN]}\n                                />\n                            }\n                            placeholder={config.labels.RENT_PRICE}\n                            isAllowed={values => checkLimit(values, config.limits.RENT_PRICE_MAX)}\n                            value={rentPrice}\n                            thousandSeparator=\" \"\n                            onValueChange={values => handleRentPriceChange(values.floatValue)}\n                            icon=\"ruble sign\"\n                        />\n                    </Grid.Column>\n                    <Grid.Column className=\"data-input-field-wrapper\">\n                        <NumberFormat\n                            customInput={Form.Input}\n                            fluid\n                            label={\n                                <TippedLabel \n                                    labelText={config.labels.INITIAL_PAYMENT}\n                                    tooltipText={\"В сценарии с вкладом эта сумма сразу помещается на вклад\"}\n                                    limits={[config.limits.INITIAL_PAYMENT_MAX, config.limits.INITIAL_PAYMENT_MIN]}\n                                />\n                            }\n                            placeholder={config.labels.INITIAL_PAYMENT}\n                            isAllowed={values => checkLimit(values, config.limits.INITIAL_PAYMENT_MAX)}\n                            value={initialPayment}\n                            thousandSeparator=\" \"\n                            onValueChange={values => setInitialPayment(values.floatValue)}\n                            icon=\"ruble sign\"\n                        />\n                        <div className=\"data-input-field-buttons-wrapper\">\n                            {config.interface.INITIAL_PAYMENT_RATES.map(e => (\n                                <Button\n                                    primary\n                                    size=\"tiny\"\n                                    onClick={() => setInitialPayment(assetPrice * e)}\n                                    key={e}\n                                >\n                                    {e * 100 + \"%\"}\n                                </Button>\n                            ))}\n                        </div>\n                    </Grid.Column>\n                </Grid.Row>\n\n                {config.interface.ALLOW_ADVANCED_FIELDS ? (\n                    <Grid.Row columns={1}>\n                        <Grid.Column className=\"data-input-field-wrapper\">\n                            <Button\n                                fluid\n                                primary\n                                basic\n                                className=\"data-input-button-centered\"\n                                onClick={() => setShowAdancedFields(!showAdvancedFields)}\n                            >\n                                {showAdvancedFields ? \"Скрыть\" : \"Показать\"} дополнительные настройки\n                            </Button>\n                        </Grid.Column>\n                    </Grid.Row>\n                ) : null}\n\n                {showAdvancedFields ? (\n                    <Grid.Row columns={3}>\n                        <Grid.Column className=\"data-input-field-wrapper\">\n                            <NumberFormat\n                                customInput={Form.Input}\n                                fluid\n                                label={config.labels.ASSET_PRICE_INCREASE_COEF}\n                                placeholder={config.labels.ASSET_PRICE_INCREASE_COEF}\n                                value={assetPriceIncreaseCoef}\n                                onValueChange={values => setAssetPriceIncreaseCoef(values.floatValue)}\n                                icon='percent'\n                            />\n                        </Grid.Column>\n                    </Grid.Row>\n                ) : null}\n            </Grid>\n\n        </>\n    )\n}\n\nexport default DataInput;\n","export const updateCalcInput = (inputData) => {\n    return (dispatch, getState) => {     \n        dispatch({\n            type: \"UPDATE_CALC_INPUT\",\n            data: inputData,\n        });\n    }\n};","import React from 'react'\nimport NumberFormat from 'react-number-format';\n\nconst DataOutputValue = ({ value, format }) => {\n    let decimalScale = 0;\n    let suffix = \"\"\n    switch (format) {\n        case \"money\":\n            decimalScale = 0;\n            break;\n        case \"perc\":\n            decimalScale = 2;\n            suffix = \"%\";\n            value = value * 100\n            break;\n        case \"years\":\n            decimalScale = 1;\n            suffix = \"\";\n            break;\n        default:\n            decimalScale = 0;\n            suffix = \"\";\n    }\n\n    return (\n        <NumberFormat\n            decimalScale={decimalScale}\n            value={value}\n            displayType={'text'}\n            thousandSeparator=\" \"\n            isNumericString={true}\n            suffix={suffix}\n        />\n    )\n}\n\nexport default DataOutputValue;\n","import React from 'react'\nimport { Table } from 'semantic-ui-react'\nimport DataOutputValue from '../data_output_number/DataOutputValue';\nimport \"./DataOutputTable.css\"\n\nconst DataOutputTable = ({ data, color }) => (\n    <div className=\"data-output-table\">\n        <Table\n            color={color}\n            selectable\n            unstackable\n            inverted\n        >\n            <Table.Body>\n                {data && Object.keys(data).map(key => (\n                    data[key] && <Table.Row key={key}>\n                        <Table.Cell>\n                            {data[key]['label']}\n                        </Table.Cell>\n                        <Table.Cell textAlign='right'>\n                            <DataOutputValue\n                                value={data[key]['value']}\n                                format={data[key]['format']}\n                            />\n                        </Table.Cell>\n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table>\n    </div>\n);\n\nexport default DataOutputTable\n","import React from 'react'\nimport { Header, Popup, Icon } from 'semantic-ui-react'\nimport DataOutputTable from '../data_output_table/DataOutputTable';\nimport \"./DataOutputTableBlock.css\";\n\nconst DataOutputTableBlock = ({ headerText, tooltipText, tableColor, data }) => (\n    <div className=\"data-output-table-block\">\n        <Header as=\"h2\">\n            { headerText }\n            <Popup\n                trigger={<small>&nbsp;<Icon name='question circle outline' /></small>}\n                content={ tooltipText }\n                basic\n            />\n        </Header>\n        <DataOutputTable data={ data } color={ tableColor } />\n    </div>\n);\n\nexport default DataOutputTableBlock\n","export const asMoney = (n) => {\n    return parseFloat(n).toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, String.fromCharCode(160)).replace('.', ',');\n}\n\nexport const asPerc = (n) => {\n    return n * 100 + \"%\"\n}\n\nexport const asFormat = (n, format) => {\n    const formats = {\n        money: asMoney,\n        perc: asPerc,\n    }\n    const result = formats[format] ? formats[format](n) : n\n\n    return String(result);\n}","import React from 'react'\nimport {\n    Line, CartesianGrid, XAxis, YAxis, Area,\n    Tooltip, ResponsiveContainer, ComposedChart, Legend,\n} from 'recharts';\nimport { asFormat, asMoney } from '../../../helper/format';\n\nconst DataOutputLineChart = ({\n    data,\n    depositKey,\n    mortgageKey,\n    nameKey,\n    assetPriceKey,\n    depositContibutionSumKey,\n    depositIncomeSumKey,\n}) => {\n    const tooltipFormatter = (value, name, props) => {\n        return [ asMoney(value), name, props]\n    }\n    return data ? (\n        <ResponsiveContainer height={400} width=\"99%\">\n            <ComposedChart\n                data={data}\n                margin={{\n                    top: 20, right: 0, bottom: 20, left: 0,\n                }}\n            >\n                <Line name=\"Сумма по ипотеке\" type=\"monotone\" dataKey={mortgageKey} stroke=\"#F2711C\" strokeWidth={2} />\n                <Line name=\"Сумма на вкладе\" type=\"monotone\" dataKey={depositKey} stroke=\"#00B5AD\" strokeWidth={2} />\n                <Line name=\"Цена актива\" type=\"monotone\" dataKey={assetPriceKey} stroke=\"#21BA45\" strokeWidth={2} dot={false} />\n                <Area name=\"Взносы на вклад\" type=\"monotone\" stackId=\"dep\" dataKey={depositContibutionSumKey} stroke=\"#6435C9\" fill=\"#6435C9\" />\n                <Area name=\"Доход по вкладу\" type=\"monotone\" stackId=\"dep\" dataKey={depositIncomeSumKey} stroke=\"#2185D0\" fill=\"#2185D0\" />\n                <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n                <XAxis dataKey={nameKey} />\n                <YAxis tickFormatter={e => asFormat(e, \"money\")} interval=\"preserveStartEnd\" mirror padding={{ bottom: 20 }} />\n                <Legend />\n                <Tooltip formatter={tooltipFormatter} />\n            </ComposedChart>\n        </ResponsiveContainer>\n    ) : null;\n}\n\nexport default DataOutputLineChart;\n\n","import React from 'react'\nimport { Header, Popup, Icon } from 'semantic-ui-react'\n\nconst DataOutputChartBlock = (props) => {\n    const { headerText, tooltipText } = props;\n    return(\n        <div className=\"data-output-chart-block\">\n            <Header as=\"h2\">\n                { headerText }\n                <Popup\n                    trigger={<small>&nbsp;<Icon name='question circle outline' /></small>}\n                    content={ tooltipText }\n                    basic\n                />\n            </Header>\n            { props.children }\n        </div>\n    );\n}\n\nexport default DataOutputChartBlock\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\nconst DecisionBlock = ({ result }) => {\n    const DecisionMessage = ({ header, text, color }) => (\n        <Message color={color}>\n            <Message.Header>{ header }</Message.Header>\n            <p>\n                { text }\n            </p>\n        </Message>\n    );\n\n    switch (result) {\n        case \"mortgage\":\n            return (\n                <DecisionMessage \n                    header=\"Ипотека выгоднее\"\n                    text=\"Вы выплатите ипотеку раньше, чем накопите на квартиру.\"\n                    color=\"pink\"\n                />\n            );\n        case \"mortgageLower\":\n            return (\n                <DecisionMessage \n                    header=\"Ипотека выгоднее\"\n                    text=\"Платеж за аренду больше, чем ежемесячный платеж по ипотеке. \n                        Взнос на вклад принимается за 0.\"\n                    color=\"pink\"\n                />\n            );\n        case \"deposit\":\n            return (\n                <DecisionMessage \n                    header=\"Вклад выгоднее\"\n                    text=\"Вы накопите на квартиру раньше, чем выплатите ипотеку.\"\n                    color=\"blue\"\n                />\n            );\n        default:\n            return (\n                <DecisionMessage \n                    header=\"Неизвестно, что выгоднее\"\n                    text=\"При введеных параметрах невозможно рассчитать результ, проверьте входящие данные\"\n                />\n            );\n    }\n}\n\nexport default DecisionBlock;\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { round, calculateMonthlyLoanPayment, calculateDepositSums } from '../../../helper/math';\nimport { Grid } from 'semantic-ui-react';\nimport DataOutputTableBlock from '../data_output_table_block/DataOutputTableBlock';\nimport DataOutputLineChart from '../data_output_line_chart/DataOutputLineChart';\nimport DataOutputChartBlock from '../data_output_chart_block/DataOutputTableBlock';\nimport DecisionBlock from '../../decision_block/DecisionBlock';\n\n\nconst DataOutput = () => {\n\n    const inputData = useSelector(state => state.calc.inputData);\n\n    // input fields\n    const assetPrice = inputData && inputData['assetPrice'];\n    const mortgageRate = inputData && inputData['mortgageRate'];\n    const mortgagePeriod = inputData && inputData['mortgagePeriod'];\n    const rentPrice = inputData && inputData['rentPrice'];\n    const initialPayment = inputData && inputData['initialPayment'];\n    const assetPriceIncreaseCoef = inputData && inputData['assetPriceIncreaseCoef'];\n\n    // mortgage\n    const monthlyMortgagePayment = round(calculateMonthlyLoanPayment(assetPrice, mortgagePeriod, mortgageRate, initialPayment), 3); \n    const totalMortgagePayment = round(monthlyMortgagePayment * mortgagePeriod * 12) + initialPayment;\n    const mortgageOverpayment = totalMortgagePayment - assetPrice;\n    const assetOverpaymentPerc = round(mortgageOverpayment / assetPrice, 4);\n    \n    // deposit and rent\n    const monthlyDepositContribution = (monthlyMortgagePayment > rentPrice) ? monthlyMortgagePayment - rentPrice : 0;\n    const depositContributionSum = monthlyDepositContribution * mortgagePeriod * 12;\n    const rentPaymentsSum = rentPrice * mortgagePeriod * 12;\n    const monthlyDepositRate = round(inputData && inputData['depositRate'] / 12, 5);\n    const [depositSums, depositIncomes] = calculateDepositSums(mortgagePeriod, monthlyDepositRate, monthlyDepositContribution, initialPayment)\n    const depositResult = depositSums[depositSums.length-1];\n    const depositIncome = depositResult - depositContributionSum;\n\n    // asset payback\n    const mortgageAssetPayback = round(totalMortgagePayment / rentPrice / 12, 1);\n    const pureAssetPayback = round(assetPrice / rentPrice / 12, 1);\n\n    // asset and deposit\n    const assetCoveringPerc = round(depositResult / assetPrice, 3);\n    const assetCoveringRemainder = depositResult - assetPrice;\n\n    // charts\n    // const data = [{ name: 'Page A', uv: 400, pv: 2400, amt: 2400 }, { name: 'Page B', uv: 800, pv: 2400, amt: 2400 }];\n    const depositChartData = depositSums.filter(\n        (_, i) => (i % 12 === 0)\n    ).map( (value, i) => {\n        return {\n            name: `Год ${i}`,\n            deposit: value,\n            depositContibutionSum: monthlyDepositContribution * i * 12 + initialPayment,\n            depositIncomeSum: depositIncomes.slice(0,i*12).reduce((a, b) => a + b, 0),\n            mortgage: monthlyMortgagePayment * i * 12 + initialPayment,\n            assetPrice: assetPrice * (1+assetPriceIncreaseCoef)**i,\n        }\n\n    });\n\n    // outputs\n    const mortgageData = {\n        monthlyMortgagePayment: {\n            label: \"Ежемесячный платеж по ипотеке\",\n            value: monthlyMortgagePayment,\n            format: \"money\",\n        },\n        totalMortgagePayment: {\n            label: \"Сумма платежей по ипотеке\",\n            value: totalMortgagePayment,\n            format: \"money\",\n        },\n        mortgageOverpayment: {\n            label: \"Переплата по ипотеке\",\n            value: mortgageOverpayment,\n            format: \"money\",\n        },\n        assetOverpaymentPerc: {\n            label: \"Процент переплаты от цены актива\",\n            value: assetOverpaymentPerc,\n            format: \"perc\",\n        },\n    }\n\n    const depositData = {\n        monthlyDepositContribution: {\n            label: \"Рассчетный размер взноса на вклад\",\n            value: monthlyDepositContribution,\n            format: \"money\",\n        }, \n        depositContributionSum: {\n            label: \"Сумма взносов на вклад\",\n            value: depositContributionSum,\n            format: \"money\",\n        },\n        rentPaymentsSum: {\n            label: \"Сумма расходов на аренду\",\n            value: rentPaymentsSum,\n            format: \"money\",\n        },\n        depositResult: {\n            label: \"Итог на вкладе (с учетом процентов)\",\n            value: depositResult,\n            format: \"money\",\n        },\n        depositIncome: {\n            label: \"Доход по вкладу\",\n            value: depositIncome,\n            format: \"money\",\n        },\n    }\n\n    const paybackData = {\n        mortgageAssetPayback: {\n            label: \"Срок окупаемости актива в годах (ипотека)\",\n            value: mortgageAssetPayback,\n            format: \"years\",\n        },\n        pureAssetPayback: {\n            label: \"Срок окупаемости актива в годах (без переплаты)\",\n            value: pureAssetPayback,\n            format: \"years\",\n        },\n    }\n\n    const assetDepositData = {\n        assetCoveringPerc: {\n            label: \"Покрытие стоимости актива вкладом\",\n            value: assetCoveringPerc,\n            format: \"perc\",\n        },\n        assetCoveringRemainder: {\n            label: \"Остаток/дефицит\",\n            value: assetCoveringRemainder,\n            format: \"money\",\n        },\n    }\n\n    return (\n        <>\n            <Grid stackable>\n                <Grid.Row columns={1}>\n                    <Grid.Column>\n                        <DecisionBlock \n                            result={\n                                monthlyDepositContribution === 0 ? (\n                                    \"mortgageLower\"\n                                ) : (\n                                    depositResult > assetPrice ? (\n                                        \"deposit\"\n                                    ) : (\n                                        \"mortgage\"\n                                    )\n                                )\n                            }\n                        />\n                    </Grid.Column>\n                </Grid.Row>\n\n                <Grid.Row columns={2}>\n\n                    <Grid.Column>\n                        <DataOutputTableBlock\n                            data={ mortgageData } \n                            tableColor=\"orange\"\n                            headerText=\"Ипотека\"\n                            tooltipText=\"Если мы используем ипотечный кредит для оплаты актива, то какой будет переплата?\"\n                        />\n                    </Grid.Column>\n\n                    <Grid.Column>\n                        <DataOutputTableBlock\n                            data={ depositData } \n                            tableColor=\"green\"\n                            headerText=\"Вклад\"\n                            tooltipText=\"Предполагается, что мы тратим в месяц такую же сумму,\n                                как платили бы за ипотеку, но часть из нее отдаем за аренду,\n                                а остаток кладем на вклад.\"\n                        />\n                    </Grid.Column>\n\n                    <Grid.Column>\n                        <DataOutputTableBlock\n                            data={ paybackData } \n                            tableColor=\"violet\"\n                            headerText=\"Окупаемость актива\"\n                            tooltipText=\"Если мы будем сдавать актив в аренду с той же самой ставкой, \n                                то за сколько лет он окупится?\"\n                        />\n                    </Grid.Column>\n\n                    <Grid.Column>\n                        <DataOutputTableBlock\n                            data={ assetDepositData } \n                            tableColor=\"blue\"\n                            headerText=\"Актив и вклад\"\n                            tooltipText=\"Покроет ли сумма на вкладе стоимость актива? \n                                Сколько еще останется или надо будет доплатить?\"\n                        />\n                    </Grid.Column>        \n\n                </Grid.Row>\n\n                <Grid.Row columns={1}>\n                    <Grid.Column>\n                        <DataOutputChartBlock\n                            headerText=\"Ипотека и вклад\"\n                            tooltipText=\"Графическое сравнение затрат на ипотеку \n                                и суммы на вкладе к концу каждого года\"\n                        >\n                            <DataOutputLineChart\n                                data={ depositChartData }\n                                depositKey=\"deposit\"\n                                mortgageKey=\"mortgage\"\n                                assetPriceKey=\"assetPrice\"\n                                nameKey=\"name\"\n                                depositIncomeSumKey=\"depositIncomeSum\"\n                                depositContibutionSumKey=\"depositContibutionSum\"\n                                assetPrice={ assetPrice }\n                            />\n                        </DataOutputChartBlock>\n                    </Grid.Column>    \n\n                </Grid.Row>\n\n            </Grid>\n        </>\n    )\n}\n\nexport default DataOutput;","import React from 'react';\nimport { Comment } from 'semantic-ui-react';\n\nconst UserSnippet = ({ currentUser: user }) => {\n    return (user && user.profile ? (\n        <Comment.Group>\n            <Comment>\n                <Comment.Avatar src={ user.profile.photo_100 } />\n                <Comment.Content>\n                    <Comment.Author>{ user.profile.first_name + \" \" + user.profile.last_name }</Comment.Author>\n                    <Comment.Text>How artistic!</Comment.Text>\n                </Comment.Content>\n            </Comment>\n        </Comment.Group>\n    ) : null);\n}\n\nexport default UserSnippet;","import React, { useState } from 'react'\nimport { Menu, Button, Modal, Header, Icon, Message } from 'semantic-ui-react';\nimport { useSelector } from 'react-redux';\nimport { parseQueryString } from '../../../helper/url';\nimport querystring from 'querystring';\nimport config from '../../../config/config';\nimport bridge from '@vkontakte/vk-bridge';\nimport './Controls.css';\n\nconst Controls = () => {\n\n    const inputData = useSelector(state => state.calc.inputData);\n    const [exportUrl, setExportUrl] = useState(\"\")\n\n    const buildExportUrl = (inputData) => {\n        const urlParams = parseQueryString(window.location.search, false)\n        const appId = (urlParams && urlParams[\"vk_app_id\"]) || config.VK_APP_ID\n        const baseUrl = `https://vk.com/app${appId}#hash/`\n        const resultingParams = querystring.stringify(inputData)\n        return baseUrl + \"?\" + resultingParams\n    }\n\n    const handleExport = () => {\n        setExportUrl(buildExportUrl(inputData))\n    }\n\n    const handleWallPost = () => {\n        setOpen(false);\n        bridge.send(\"VKWebAppShowWallPostBox\", {\n            \"message\": config.labels.WALL_SHARE,\n            \"attachments\": exportUrl,\n            \"copyright\": exportUrl\n        });\n    }\n\n    const [open, setOpen] = React.useState(false)\n\n    const ExportModal = () => (\n        <Modal\n            closeIcon\n            open={open}\n            trigger={\n                <Menu.Item\n                    onClick={handleExport}\n                    icon='save'\n                />\n            }\n            onClose={() => setOpen(false)}\n            onOpen={() => setOpen(true)}\n        >\n            <Header icon='linkify' content=\"Ссылка на результат\" />\n            <Modal.Content>\n                <Message>\n                    <p className=\"controls-export-url-wrapper\">{exportUrl}</p>\n                </Message>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button color='blue' onClick={handleWallPost}>\n                    <Icon name='vk' /> Сохранить на стене\n                </Button>\n                <Button color='green' onClick={() => setOpen(false)}>\n                    <Icon name='checkmark' /> Закрыть\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    )\n\n\n    return (\n        <div className=\"controls-wrapper\">\n            <Menu \n                icon='labeled' \n                vertical \n                inverted \n                size=\"mini\"\n                compact\n            >\n                <ExportModal />\n            </Menu>\n        </div>\n    )\n}\n\nexport default Controls;","import React from 'react'\nimport config from '../../../config/config'\nimport { Header } from 'semantic-ui-react';\n\nconst Footer = () => {\n    return (\n        <>\n            <Header disabled as='h6' textAlign='left'>\n                <p>Вид платежей по ипотеке: аннуитетные. Вид процентов по вкладу: ежемесячная капитализация.\n                Калькулятор не учитывает изменение стоимости жилья и аренды,\n                право на вычеты и материнский капитал, а также стоимость ремонта\n                и платежи по ЖКХ.\n                </p>\n            </Header>\n            <Header disabled as='h5' textAlign='center'>\n                <a\n                    href={config.AUTHOR_LINK}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >Связаться с автором</a>\n            </Header>\n        </>\n    )\n}\n\nexport default Footer;","import React from 'react'\nimport { Divider } from 'semantic-ui-react';\nimport \"./Intro.css\";\n\nconst Intro = () => {\n    return (\n        <div className=\"intro-wrapper\">\n            <p>\n                Есть определенная сумма денег, которую мы можем платить в месяц по ипотеке.\n                Вместо этого можно не брать ипотеку и снимать квартиру.\n            </p>\n            <p>\n                Тогда часть из той же суммы мы будем отдавать за аренду, а остаток можем помещать на вклад.\n                Что будет выгоднее?\n            </p>\n            <Divider />\n        </div>\n    );\n}\n\nexport default Intro;\n","import React, { useState } from 'react';\nimport { Header, Accordion, Icon } from 'semantic-ui-react';\nimport \"./TitleBlock.css\";\nimport Intro from '../intro/Intro';\n\nconst TitleBlock = () => {\n    const [showIntro, setShowIntro] = useState(false)\n    return (\n        <div className=\"title-block-wrapper\">\n            <Header as='h1' icon textAlign='center' className=\"title-block-header\">\n                <Header.Content>Ипотека vs Вклад</Header.Content>\n            </Header>\n            <Accordion>\n                <Accordion.Title\n                    className=\"title-block-accordion-title\"\n                    active={showIntro}\n                    onClick={() => setShowIntro(!showIntro)}\n                >\n                    <Icon name='dropdown' />\n                    Инструкция\n                </Accordion.Title>\n                <Accordion.Content active={showIntro}>\n                    <Intro />\n                </Accordion.Content>\n            </Accordion>\n        </div>\n    )\n}\n\nexport default TitleBlock;\n","import React from 'react';\nimport { Container, Divider } from 'semantic-ui-react'\nimport DataInput from '../components/calc/data_input/DataInput';\nimport DataOutput from '../components/calc/data_output/DataOutput';\nimport UserSnippet from '../components/user/user_snippet/UserSnippet';\nimport Controls from '../components/interface/controls/Controls';\nimport Footer from '../components/interface/footer/Footer';\nimport TitleBlock from '../components/interface/title_block/TitleBlock';\nimport \"./Home.css\";\n\nconst Home = () => {\n\treturn (\n        <Container className=\"home-wrapper\">\n            <Controls />\n            <TitleBlock />\n            <UserSnippet />\n            <DataInput />\n            <Divider />\n            <DataOutput />\n            <Footer />\n        </Container>\n\t)\n};\n\nexport default Home;","import React, { useEffect } from 'react';\nimport Home from './pages/Home';\nimport { useDispatch } from 'react-redux';\nimport { getCurrentUser } from './store/actions/userActions';\nimport { getInputData } from './store/actions/urlActions';\nimport './App.css';\n\nconst App = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getCurrentUser());\n        dispatch(getInputData());\n    }, [dispatch])\n\n    return (\n        <div className=\"App\">\n            <Home />\n        </div>\n    );\n}\n\nexport default App;\n","import bridge from '@vkontakte/vk-bridge';\n\nexport const getCurrentUser = () => {\n    return (dispatch, getState) => {\n        bridge.sendPromise('VKWebAppGetUserInfo', {})\n        .then(data => {\n            dispatch({ type: \"GET_VK_USER_SUCCESS\", user: data });\n        })\n        .catch(err => {\n            dispatch({ type: \"GET_VK_USER_ERROR\", error: err });\n        });\n    }\n};\n","import { parseQueryString } from \"../../helper/url\";\n\nexport const getValidationQuery = (response) => {\n    return (dispatch, getState) => {\n        const queryParams = parseQueryString(window.location.search);\n        const hashParams = parseQueryString(window.location.hash);\n        // fix comma encoding for validation\n        queryParams.vk_access_token_settings = decodeURIComponent(queryParams.vk_access_token_settings);\n        dispatch({ type: \"GET_VK_QUERY\", query: queryParams, hash: hashParams });\n    }\n};\n\nexport const getInputData = () => {\n    return (dispatch, getState) => {\n        const urlParams = parseQueryString(window.location.hash, true);\n        const ifGiven = (given, def) => (given ? given : def);\n        dispatch({ type: \"GET_INPUT_DATA\", data: {\n            inflationControl: ifGiven(urlParams && urlParams.inflationControl, false),\n            mortgageRate: ifGiven(urlParams && urlParams.inflationValue, 0),\n            mortgagePeriod: ifGiven(urlParams && urlParams.mortgageRate, 8),\n            assetPrice: ifGiven(urlParams && urlParams.mortgagePeriod, 15),\n            rentPrice: ifGiven(urlParams && urlParams.assetPrice, 5000000),\n            rentCoef: ifGiven(urlParams && urlParams.rentPrice, 25000),\n            depositRate: ifGiven(urlParams && urlParams.rentCoef, 0.005),\n            inflationValue: ifGiven(urlParams && urlParams.depositRate, 4),\n        } });\n    }\n};\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    inputData: null,\n    error: null,\n    loading: false,\n}\n\nconst calcReducer = (state=initState, action) => {\n    switch (action.type) {\n        case \"UPDATE_CALC_INPUT\":\n            return {\n                ...state,\n                inputData: action.data,\n            };\n        case \"SET_LOADING\":\n            return {\n                ...state,\n                loading: true,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default calcReducer;","const initState = {\n    currentUser: null,\n    error: null\n}\n\nconst userReducer = (state=initState, action) => {\n    switch (action.type) {\n        case \"GET_VK_USER_SUCCESS\":\n            return {\n                ...state,\n                currentUser: {\n                    ...state.currentUser,\n                    profile: action.user,\n                },\n            }\n        case \"GET_VK_USER_ERROR\":\n            return {\n                ...state,\n                error: action.error,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default userReducer;","const initState = {\n    vkquery: null,\n    inputData: null,\n}\n\nconst urlReducer = (state=initState, action) => {\n    switch (action.type) {\n        case \"GET_VK_QUERY\":\n            return {\n                ...state,\n                vkquery: {\n                    query: action.query,\n                    hash: action.hash\n                }\n            }\n        case \"GET_INPUT_DATA\":\n            return {\n                ...state,\n                inputData: action.data,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default urlReducer;","import { combineReducers } from 'redux';\nimport calcReducer from './calcReducer';\nimport userReducer from './userReducer';\nimport urlReducer from './urlReducer';\n\nconst rootReducer = combineReducers({\n    calc: calcReducer,\n    user: userReducer,\n    url: urlReducer,\n});\n\nexport default rootReducer;","import React from 'react'\nimport { Provider } from 'react-redux'\n\nconst ProviderWrapper = ({ children, store }) => (\n    <Provider store={store}>\n        { children }\n    </Provider>\n)\n\nexport default ProviderWrapper","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers/rootReducer';\nimport ProviderWrapper from './Provider';\nimport bridge from '@vkontakte/vk-bridge';\nimport 'semantic-ui-css/semantic.min.css';\n\nbridge.send(\"VKWebAppInit\", {}); \n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n);\n\nconst CalcApp = () => (\n    <ProviderWrapper store={ store }>\n        <App />\n    </ProviderWrapper>\n);\n\nReactDOM.render(\n    <CalcApp />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}